name: Build and push

on:
  workflow_dispatch:
    inputs:
      use_cache:
        description: 'Use Docker cache'
        type: boolean
        default: true
  push:
    branches: main
  schedule:
    - cron: '0 0 * * 0'

env:
  DOCKER_BUILD_CHECKS_ANNOTATIONS: false

jobs:
  base-image:
    runs-on: ubuntu-latest
    steps:
      - name: Set the PREVIOUS_STABLE_ALPINE env
        id: alpine_version_checker
        run: |
          echo "PREVIOUS_STABLE_ALPINE=`curl -q https://dl-cdn.alpinelinux.org/alpine/ |grep ">v" | cut -d 'v' -f 2 | cut -d '/' -f 1  | sort --field-separator=. --version-sort | tail -2 | head -1`" >> $GITHUB_OUTPUT
      - name: checkout code
        uses: actions/checkout@v5
      - uses: hadolint/hadolint-action@v3.3.0
        with:
          dockerfile: base/Dockerfile
          ignore: DL3018
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          push: true
          context: base/
          build-args: |
            ALPINE_VERSION=${{ steps.alpine_version_checker.outputs.PREVIOUS_STABLE_ALPINE }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: ${{ (github.event_name != 'workflow_dispatch' || inputs.use_cache) && format('type=gha,scope={0}', github.job) || '' }}
          cache-to: type=gha,mode=max,scope=${{ github.job }}
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/base:alpine-${{ steps.alpine_version_checker.outputs.PREVIOUS_STABLE_ALPINE }}
            ghcr.io/${{ github.repository_owner }}/base:latest
  build:
    runs-on: ubuntu-latest
    needs: base-image
    env:
      TEST_TAG: ${{ github.repository_owner }}/${{ matrix.image.program_name }}:test
    strategy:
      fail-fast: false
      matrix:
        image:
          - program_name: "rsync"
          - program_name: "tftp"
          - program_name: "sqlite3"
          - program_name: "postgres-init"
    steps:
      - name: Set the PREVIOUS_STABLE_ALPINE env
        id: alpine_version_checker
        run: |
          echo "PREVIOUS_STABLE_ALPINE=`curl -q https://dl-cdn.alpinelinux.org/alpine/ |grep ">v" | cut -d 'v' -f 2 | cut -d '/' -f 1  | sort --field-separator=. --version-sort | tail -2 | head -1`" >> $GITHUB_OUTPUT
      - name: checkout code
        uses: actions/checkout@v5
      - uses: hadolint/hadolint-action@v3.3.0
        with:
          dockerfile: ${{ matrix.image.program_name }}/Dockerfile
          ignore: DL3018
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.image.program_name }}
          tags: |
            # full length sha
            type=sha,format=long,prefix=
            type=raw,enable=true,priority=200,prefix=,suffix=,value=alpine-${{ steps.alpine_version_checker.outputs.PREVIOUS_STABLE_ALPINE }}
          flavor: |
            latest=true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ${{ matrix.image.program_name }}/
          build-args: |
            ALPINE_VERSION=${{ steps.alpine_version_checker.outputs.PREVIOUS_STABLE_ALPINE }}
          cache-from: ${{ (github.event_name != 'workflow_dispatch' || inputs.use_cache) && format('type=gha,scope={0}', matrix.image.program_name) || '' }}
          cache-to: type=gha,mode=max,scope=${{ matrix.image.program_name }}
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}

  latest-ruby:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.fetch_version.outputs.latest_version }}
    steps:
      - id: fetch_version
        name: Fetch Latest Stable Ruby Version
        run: |
          versions="$(curl -s 'https://raw.githubusercontent.com/docker-library/ruby/refs/heads/master/versions.json')"
          echo "Fetched Ruby versions JSON."
          latest_version=$(echo "$versions" | jq -r '
            [ to_entries[]
              | select(.value != null and (.key | test("^[0-9]+(\\.[0-9]+)*$")))
              | .value.version
            ]
            | sort_by(. | split(".") | map(tonumber))
            | last
          ')
          echo "Latest stable Ruby version: $latest_version"
          echo "latest_version=$latest_version" >> $GITHUB_OUTPUT
  base-ruby:
    runs-on: ubuntu-latest
    needs: latest-ruby
    steps:
      - name: checkout code
        uses: actions/checkout@v5
      - uses: hadolint/hadolint-action@v3.3.0
        with:
          ignore: DL3018
          dockerfile: ruby/Dockerfile
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/ruby
          tags: |
            # full length sha
            type=sha,format=long,prefix=
            type=raw,enable=true,priority=200,prefix=,suffix=,value=${{ needs.latest-ruby.outputs.version }}-slim
            type=raw,enable=true,priority=300,prefix=,suffix=,value=latest-slim
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          # Token provided by gh. To allow pushing to ghcr from github actions
          # go to settings -> Actions -> General -> Workflow permissions -> Read and write permissions
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ruby/
          build-args: |
            RUBY_VERSION=${{ needs.latest-ruby.outputs.version }}-slim
          cache-from: type=gha,scope=${{ github.job }}
          cache-to: type=gha,mode=max,scope=${{ github.job }}
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
